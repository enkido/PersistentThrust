# ASP.NET
# Build and test ASP.NET projects.
# Add steps that publish symbols, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  system.debug: true

steps:
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  displayName: 'Restore project dependencies'
  inputs:
    restoreSolution: '$(solution)'

- script: 'echo "$(Build.DefinitionName), $(Build.BuildId), $(Build.BuildNumber)" > buildinfo.txt'
  displayName: 'Write build info'
  workingDirectory: GameData\PersistentThrust

- task: VSBuild@1
  displayName: 'Build the project - $(buildConfiguration)'
  inputs:
    solution: '$(Build.SourcesDirectory)\src\PersistentThrust.sln'
    msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="$(build.artifactStagingDirectory)"'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

#- task: VSTest@2
#  inputs:
#    platform: '$(buildPlatform)'
#    configuration: '$(buildConfiguration)'

- task: ArchiveFiles@2
  displayName: compress artifacts into zip file
  inputs:
    rootFolderOrFile: '$(Build.SourcesDirectory)\GameData'
    includeRootFolder: true
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/PersistentThrust.zip'
    replaceExistingArchive: true

- task: AzureKeyVault@1
  displayName: Get acceskey from azure keyvault
  inputs:
    azureSubscription: 'Azure subscription 1(62eb2201-a6cc-4ac2-a0a2-824d2bc1778b)'
    KeyVaultName: 'Secrets179'
    SecretsFilter: '*'
    RunAsPreJob: true

- task: PowerShell@2
  displayName: publish researse to github with version in name
  inputs:
    filePath: '$(Build.SourcesDirectory)\create-release-with-assets-and-rename.ps1'
    arguments: '$(AccessToken) $(Build.SourcesDirectory)\GameData\PersistentThrust\Plugin\PersistentThrust.dll $(Build.ArtifactStagingDirectory)/PersistentThrust.zip'


- task: PublishBuildArtifacts@1
  displayName: 'Publish artifacts $(buildConfiguration)'
  inputs:
    PathtoPublish: $(build.artifactstagingdirectory)\
    ArtifactName: 'PublishBuildArtifacts'
    